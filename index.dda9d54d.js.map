{"mappings":"AAAO,MAAMA,EACJ,QADIA,EAEJ,QAFIA,EAGL,OAHKA,EAIL,OCJKC,EAAM,CAAC,GAAI,IACXC,EACR,GADQA,EAER,GAGL,IAAK,IAAIC,EAAM,EAAGA,IAAQD,EAAYC,GAAO,EAC3CF,EAAI,GAAGE,GAAOA,EAEhB,IAAK,IAAIC,EAAM,EAAGA,IAAQF,EAAYE,GAAO,EAC3CH,EAAI,GAAGG,GAAOA,ECPhB,MAAMC,EAAW,CAAC,EAAG,GAwBRC,EAAQC,IACnB,IAAIC,EAAc,CAACH,EAAS,GAAIA,EAAS,IACzC,OAAQE,GACN,KAAKP,EACHQ,EAAY,GAAKH,EAAS,GAAK,EAC/B,MACF,KAAKL,EACHQ,EAAY,GAAKH,EAAS,GAAK,EAC/B,MACF,KAAKL,EACHQ,EAAY,GAAKH,EAAS,GAAK,EAC/B,MACF,KAAKL,EACHQ,EAAY,GAAKH,EAAS,GAAK,EAInC,QA1BmB,CAAIG,GAErBA,EAAY,IAAM,GAClBA,EAAY,GAAKN,GACjBM,EAAY,IAAM,GAClBA,EAAY,GAAKN,EAqBfO,CAAgBD,KAClBH,EAAS,GAAKG,EAAY,GAC1BH,EAAS,GAAKG,EAAY,IACnB,IC3CLE,EACG,OADHA,EAEG,OAFHA,EAGE,OAHFA,EAIE,OAJFA,EAKG,OAGHC,EAAMJ,IACV,MAAMK,EAAYC,SAASC,eAAe,WACpCC,EAAkBF,SAASG,cAAc,KACzCC,EDuCCZ,ECtCDa,EAAWZ,EAAKC,GAGpBQ,EAAgBI,UADdD,EACuB,SAAYX,uBAA+BU,EAAS,OAAOA,EAAS,MAEpE,kBAAqBV,IAGhDK,EAAUQ,YAAYL,GACtBH,EAAUS,UAAYT,EAAUU,cAIhCT,SAASU,iBAAiB,WAAYC,IACpC,OAAQA,EAAMC,MACZ,KAAKf,EACHC,EAAGX,GACH,MACF,KAAKU,EACHC,EAAGX,GACH,MACF,KAAKU,EACHC,EAAGX,GACH,MACF,KAAKU,EACHC,EAAGX,GACH,MACF,KAAKU,EC3Cc,MACvB,MAAMgB,EAAOb,SAASc,qBAAqB,QAAQ,GAC7CC,EAAef,SAASG,cAAc,MAE5CY,EAAaT,UAAY,eACzBO,EAAKN,YAAYQ,IDuCXC","sources":["src/direction.js","src/map.js","src/player.js","src/input.js","src/debug.js"],"sourcesContent":["export const DIRECTION = {\n  NORTH: \"North\",\n  SOUTH: \"South\",\n  EAST: \"East\",\n  WEST: \"West\",\n};\n","export const map = [[], []];\nexport const MAP_SIZE = {\n  X: 10,\n  Y: 10,\n};\n\nfor (let pos = 0; pos === MAP_SIZE.X; pos += 1) {\n  map[0][pos] = pos;\n}\nfor (let pos = 0; pos === MAP_SIZE.Y; pos += 1) {\n  map[1][pos] = pos;\n}\n","import { DIRECTION } from \"./direction\";\nimport { MAP_SIZE } from \"./map\";\n\nconst position = [0, 0];\n\nexport const isNotOutOfBounds = (pos, direction) => {\n  switch (direction) {\n    case DIRECTION.NORTH:\n      return pos[1] + 1 < MAP_SIZE.Y;\n    case DIRECTION.SOUTH:\n      return pos[1] - 1 >= 0;\n    case DIRECTION.EAST:\n      return pos[0] + 1 < MAP_SIZE.X;\n    case DIRECTION.WEST:\n      return pos[0] - 1 >= 0;\n  }\n};\n\nconst isValidPosition = (newPosition) => {\n  return (\n    newPosition[0] >= 0 &&\n    newPosition[0] < MAP_SIZE.X &&\n    newPosition[1] >= 0 &&\n    newPosition[1] < MAP_SIZE.Y\n  );\n};\n\nexport const move = (direction) => {\n  let newPosition = [position[0], position[1]];\n  switch (direction) {\n    case DIRECTION.NORTH:\n      newPosition[1] = position[1] + 1;\n      break;\n    case DIRECTION.SOUTH:\n      newPosition[1] = position[1] - 1;\n      break;\n    case DIRECTION.EAST:\n      newPosition[0] = position[0] + 1;\n      break;\n    case DIRECTION.WEST:\n      newPosition[0] = position[0] - 1;\n      break;\n  }\n\n  if (isValidPosition(newPosition)) {\n    position[0] = newPosition[0];\n    position[1] = newPosition[1];\n    return true;\n  }\n\n  return false;\n};\n\nexport const getPosition = () => {\n  return position;\n};\n","import { getPosition, move } from \"./player\";\nimport { DIRECTION } from \"./direction\";\nimport { openDebugger } from \"./debug\";\n\nconst CODE = {\n  NORTH: \"KeyW\",\n  SOUTH: \"KeyS\",\n  EAST: \"KeyD\",\n  WEST: \"KeyA\",\n  DEBUG: \"KeyB\",\n};\n\nconst go = (direction) => {\n  const consoleEl = document.getElementById(\"console\");\n  const consoleOutputEl = document.createElement(\"p\");\n  const position = getPosition();\n  const hasMoved = move(direction);\n\n  if (hasMoved) {\n    consoleOutputEl.innerText = `Going ${direction}, new position is [${position[0]}, ${position[1]}]`;\n  } else {\n    consoleOutputEl.innerText = `Unable to move ${direction}`;\n  }\n\n  consoleEl.appendChild(consoleOutputEl);\n  consoleEl.scrollTop = consoleEl.scrollHeight;\n};\n\nexport const addEventListeners = () => {\n  document.addEventListener(\"keydown\", (event) => {\n    switch (event.code) {\n      case CODE.NORTH:\n        go(DIRECTION.NORTH);\n        break;\n      case CODE.SOUTH:\n        go(DIRECTION.SOUTH);\n        break;\n      case CODE.EAST:\n        go(DIRECTION.EAST);\n        break;\n      case CODE.WEST:\n        go(DIRECTION.WEST);\n        break;\n      case CODE.DEBUG:\n        openDebugger();\n        break;\n    }\n  });\n};\n","export const openDebugger = () => {\n  const main = document.getElementsByTagName(\"main\")[0];\n  const debugMessage = document.createElement(\"h2\");\n\n  debugMessage.innerText = \"Debug window\";\n  main.appendChild(debugMessage);\n};\n"],"names":["$4b229bb06f267340$export$9106728c49045482","$fe1ed4749400cfd4$export$871de8747c9eaa88","$fe1ed4749400cfd4$export$fdf35536e9a0700c","pos","pos1","$ad2d4a4c0958e4ec$var$position","$ad2d4a4c0958e4ec$export$d947e5f4f4c48d48","direction","newPosition","$ad2d4a4c0958e4ec$var$isValidPosition","$566e0e012eb818ad$var$CODE","$566e0e012eb818ad$var$go","consoleEl","document","getElementById","consoleOutputEl","createElement","position","hasMoved","innerText","appendChild","scrollTop","scrollHeight","addEventListener","event","code","main","getElementsByTagName","debugMessage","$270682faaaf57852$export$92eaa8e2906b6d5f"],"version":3,"file":"index.dda9d54d.js.map"}